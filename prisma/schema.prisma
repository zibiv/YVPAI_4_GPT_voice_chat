// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

enum SubscriptionType {
  BASIC
  PREMIUM
  UNLIMITED
}

enum ContextMessageRole {
  user
  assistant
  system
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model TelegramUser {
  id                BigInt                    @id
  username          String?
  firstName         String                    @default("")
  userId            String?
  subscriptionType  SubscriptionType          @default(BASIC)
  startFlag         Boolean                   @default(false)
  timeoutUntil      DateTime?
  createdChatId     BigInt?
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt

  Messages          Message[]
  ContextMessages   ContextMessage[]
  Contexts          Context[]
}

model Message {
  id                BigInt                    @id
  fromUserId        BigInt
  chatId            BigInt
  text              String                    @db.Text
  date              DateTime
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt

  TelegramUser      TelegramUser              @relation(fields: [fromUserId], references: [id])
  ContextMessages   ContextMessage[]

  @@unique([chatId, id])
  @@index([fromUserId])
}

model ContextMessage {
  id                String                    @id @default(cuid())
  order             Int                       @default(0)
  contextId         String
  role              ContextMessageRole
  text              String?                   @db.Text
  messageId         BigInt?
  userId            BigInt?
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt

  Messages          Message?                  @relation(fields: [messageId], references: [id])
  TelegramUser      TelegramUser?             @relation(fields: [userId], references: [id])
  Context           Context                   @relation(fields: [contextId], references: [id])

  @@unique([messageId])
  @@index([messageId])
  @@index([userId])
  @@index([contextId])
}

model Context {
  id                String                    @id @default(cuid())
  title             String?
  chatId            BigInt
  creatorId         BigInt
  createdAt         DateTime                  @default(now())
  updatedAt         DateTime                  @updatedAt

  ContextMessages   ContextMessage[]
  TelegramUser      TelegramUser              @relation(fields: [creatorId], references: [id])

  @@index([creatorId])

}

